//apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
//apply plugin: 'ivy'
apply plugin: 'maven-publish'

//android support
buildscript {
	repositories {
		jcenter()
	}

	dependencies {
		classpath 'com.android.tools.build:gradle:1.2.3'
	}
}

allprojects{
    repositories{
	jcenter()
    }
}

//apply plugin: 'com.google.gms.google-services'
apply plugin: 'android-library'

android {
    compileSdkVersion 22
    buildToolsVersion '22.0.1'
	defaultConfig{
		minSdkVersion 15
		targetSdkVersion 19
	}
}

repositories{
	mavenCentral()
	maven{
	    url "http://mvnrepository.com/artifact/org.json/json"
    	}
}

group = 'com.qwasi'
archivesBaseName = "QwasiSDK"
version = '2.1.0'

dependencies {
	compile fileTree(dir: 'libs', include: ['*.jar'])
	//compile 'com.android.support:appcompat-v7:20.+'
	compile 'com.google.android.gms:play-services-gcm:7.5.0'
	//messaging
	compile 'com.google.android.gms:play-services-location:7.5.0'
	//location
	compile 'com.thetransactioncompany:jsonrpc2-base:1.38'
	compile 'com.thetransactioncompany:jsonrpc2-client:1.15'
	compile 'me.tatarka:gradle-retrolambda:3.2.0'
}

sourceSets{
	main{
		java{
			srcDir 'src/java'
		}
		resources{
			srcDir 'src/resources'
		}
	}
}

uploadArchives{
	repositories{
		mavenDeployer {
			repository(url: "file:///Users/ccoulton/QwasiSDK/") //local

			beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

			repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2")
					{ authentication(userName: ossrhUsername, password:ossrhPassword) }

			snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots")
					{ authentication(userName:ossrhUsername , password: ossrhPassword ) }

			pom.project{
				name 'QwasiSDK'
				packaging 'jar'
				description 'SDK for accessing Qwasi\'s backend api for mixed method broadcasts'
				url "https://github.com/Qwasi"
				scm{
					connection 'scm:git:git@github.com:qwasi/android-sdk.git'
					developerConnection 'scm:git:git@github.com:qwasi/android-sdk.git'
					url 'https://github.com/qwasi/android-sdk'
				}
				licenses{
					license{
						name 'MIT'
						distribution 'repo'
					}
				}

				developers{
					developer{
						id 'ccoulton'
						name 'Charles Coulton'
						email 'charles.coulton@qwasi.com'
					}
					developer {
						name 'Rob Rodriguez'
						email 'rob.rodriguez@qwasi.com'
					}
				}
			}

		}
		ivy{
			url "file:///Users/ccoulton/QwasiSDK"
		}
	}
}
			

task writeNewPom << {
    pom {
        project {
            groupId 'com.qwasi'
            artifactId 'osSdk'
            version '2.1.0'

            inceptionYear '2015'
            licenses {
                license {
                    name 'MIT'
					url 'http://www.opensource.org/licenses/mit-license.php'
                    distribution 'repo'
                }
            }
        }
    }.writeTo("$buildDir/2.1.0.pom.xml")
}

task sourcesJar(type: Jar) {
	from android.sourceSets.main.java.srcDirs
	classifier = 'sources'
}

task javadoc(type: Javadoc) {
	source = android.sourceSets.main.java.srcDirs
	classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

artifacts {
	archives javadocJar
	archives sourcesJar
}

signing{
	sign configurations.archives
}